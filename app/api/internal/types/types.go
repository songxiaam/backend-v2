// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3

package types

type AdminRequest struct {
	WalletAddress string `json:"walletAddress"`
}

type Base struct {
	ID        uint64 `gorm:"column:id;primaryKey;autoIncrement" json:"id"`
	CreatedAt string `gorm:"column:created_at;autoCreateTime" json:"created_at"`
	UpdatedAt string `gorm:"column:updated_at;autoUpdateTime" json:"updated_at"`
	IsDeleted bool   `gorm:"column:is_deleted;default:false" json:"is_deleted"`
}

type BaseInfo struct {
	ID        uint64 `json:"id"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
	IsDeleted bool   `json:"is_deleted"`
}

type Bounty struct {
	ApplicantDeposit            int          `json:"applicants_deposit"`
	ChainId                     uint64       `json:"chain_id"`
	ComerId                     uint64       `json:"comer_id"`
	CreatedAt                   string       `json:"created_at"`
	DepositContractAddress      string       `json:"deposit_contract_address"`
	DepositContractTokenDecimal int          `json:"deposit_contract_token_decimal"`
	DepositContractTokenSymbol  string       `json:"deposit_contract_token_symbol"`
	DiscussionLink              string       `json:"discussion_link"`
	ExpiredTime                 string       `json:"expired_time"`
	FounderDeposit              int          `json:"founder_deposit"`
	Id                          uint64       `json:"id"`
	IsLock                      int          `json:"is_lock"`
	PaymentMode                 int          `json:"payment_mode"`
	Reward                      BountyReward `json:"reward"`
	Startup                     StartupBasic `json:"startup"`
	StartupId                   uint64       `json:"startup_id"`
	Status                      int          `json:"status"`
	Title                       string       `json:"title"`
	TxHash                      string       `json:"tx_hash"`
}

type BountyApplicant struct {
	BountyId    uint64 `json:"bountyId"`    // 赏金任务ID
	ComerID     uint64 `json:"comerId"`     // 申请人ID
	ApplyAt     string `json:"applyAt"`     // 申请时间
	RevokeAt    string `json:"revokeAt"`    // 撤销时间
	ApproveAt   string `json:"approveAt"`   // 批准时间
	QuitAt      string `json:"quitAt"`      // 退出时间
	SubmitAt    string `json:"submitAt"`    // 提交时间
	Status      int    `json:"status"`      // 申请状态
	Description string `json:"description"` // 申请描述
}

type BountyComer struct {
	Activation     bool                  `json:"activation"`
	Address        string                `json:"address"`
	Avatar         string                `json:"avatar"`
	Banner         string                `json:"banner"`
	CustomDomain   string                `json:"customDomain"`
	Id             int                   `json:"id"`
	InvitationCode string                `json:"invitationCode"`
	IsConnected    bool                  `json:"isConnected"`
	Location       string                `json:"location"`
	Name           string                `json:"name"`
	Skills         []TagRelationResponse `json:"skills"`
	TimeZone       string                `json:"timeZone"`
}

type BountyContact struct {
	BountyId       uint64 `json:"bountyId"`       // 赏金任务ID
	ContactType    uint8  `json:"contactType"`    // 联系方式类型
	ContactAddress string `json:"contactAddress"` // 联系地址
}

type BountyDepositRecord struct {
	Amount    int                `json:"amount"`
	BountyId  uint64             `json:"bountyId"`
	Comer     ComerBasicResponse `json:"comer"`
	ComerId   uint64             `json:"comerId"`
	CreatedAt string             `json:"createdAt"`
	Id        uint64             `json:"id"`
	Mode      int                `json:"mode"`
	Status    int8               `json:"status"`
	TxHash    string             `json:"txHash"`
}

type BountyPaymentPeriod struct {
	BountyId     uint64 `json:"bountyId"`     // 赏金任务ID（唯一索引）
	PeriodType   int    `json:"periodType"`   // 周期类型
	PeriodAmount uint64 `json:"periodAmount"` // 周期数量
	HoursPerDay  int    `json:"hoursPerDay"`  // 每日小时数
	Token1Symbol string `json:"token1Symbol"` // 代币1符号
	Token1Amount int    `json:"token1Amount"` // 代币1数量
	Token2Symbol string `json:"token2Symbol"` // 代币2符号
	Token2Amount int    `json:"token2Amount"` // 代币2数量
	Target       string `json:"target"`       // 目标描述
}

type BountyPaymentTerms struct {
	BountyId     uint64 `json:"bountyId"`     // 关联的赏金任务ID
	PaymentMode  int8   `json:"paymentMode"`  // 支付方式
	Token1Symbol string `json:"token1Symbol"` // 第一种代币符号
	Token1Amount int    `json:"token1Amount"` // 第一种代币数量
	Token2Symbol string `json:"token2Symbol"` // 第二种代币符号
	Token2Amount int    `json:"token2Amount"` // 第二种代币数量
	Terms        string `json:"terms"`        // 支付条款详情
	SeqNum       int    `json:"seqNum"`       // 排序序号
	Status       int    `json:"status"`       // 状态
}

type BountyReward struct {
	BountyId     uint64 `json:"bountyId"`
	Token1Symbol string `json:"token1Symbol"`
	Token1Amount int    `json:"token1Amount"`
	Token2Symbol string `json:"token2Symbol"`
	Token2Amount int    `json:"token2Amount"`
}

type BuyInfo struct {
	BuyTokenContract string `json:"buy_token_contract"` // 购买代币合约地址
	BuyTokenName     string `json:"buy_token_name"`     // 购买代币名称
	BuyTokenSymbol   string `json:"buy_token_symbol"`   // 购买代币符号
	BuyTokenDecimals int    `json:"buy_token_decimals"` // 购买代币精度
	BuyTokenSupply   string `json:"buy_token_supply"`   // 购买代币总量
	BuyPrice         string `json:"buy_price"`          // 购买价格
	MaxBuyAmount     string `json:"max_buy_amount"`     // 最大购买量
}

type ChainBasicResponse struct {
	ChainID        uint64          `json:"chain_id"` // 链ID（唯一索引）
	Name           string          `json:"name"`     // 链名称
	Logo           string          `json:"logo"`     // 链Logo
	Status         int8            `json:"status"`   // 状态：1-正常，2-禁用
	ChainContracts []ChainContract `json:"chain_contracts"`
	ChainEndpoints []ChainEndpoint `json:"chain_endpoints"`
}

type ChainContract struct {
	ChainID       uint64 `json:"chain_id"`        // 链ID
	Address       string `json:"address"`         // 合约地址
	Project       int8   `json:"project"`         // 项目类型：1-Startup, 2-Bounty, 3-Crowdfunding, 4-Gover
	Type          int8   `json:"type"`            // 合约类型：1-工厂合约, 2-子合约
	Version       string `json:"version"`         // 合约版本
	ABI           string `json:"abi"`             // ABI JSON
	CreatedTxHash string `json:"created_tx_hash"` // 创建交易哈希
}

type ChainEndpoint struct {
	Protocol int8   `json:"protocol"` // 通信协议：1-rpc 2-wss
	ChainID  uint64 `json:"chain_id"` // 链ID
	URL      string `json:"url"`      // 节点URL
	Status   int8   `json:"status"`   // 状态：1-正常 2-禁用
}

type ComerAccountResponse struct {
	Avatar    string `json:"avatar"`
	ComerId   int    `json:"comer_id"`
	Id        int    `json:"id"`
	IsLinked  bool   `json:"is_linked"`
	IsPrimary bool   `json:"is_primary"`
	Nickname  string `json:"nickname"`
	Oin       string `json:"oin"`
	Type      int    `json:"type"`
}

type ComerConnectedTotalResponse struct {
	BeConnectComerTotal int `json:"be_connect_comer_total"`
	ConnectComerTotal   int `json:"connect_comer_total"`
	ConnectStartupTotal int `json:"connect_startup_total"`
}

type ComerEducationResponse struct {
	ComerId     int    `json:"comer_id"`
	GraduatedAt string `json:"graduated_at"`
	Id          int    `json:"id"`
	Major       string `json:"major"`
	School      string `json:"school"`
	StartDate   string `json:"start_date"`
	EndDate     string `json:"end_date"`
	Description string `json:"description"`
	Level       int    `json:"level"`
	Degree      string `json:"degree"`
}

type ComerInfo struct {
	Bio     string `json:"bio"`
	ComerId int    `json:"comer_id"`
	Id      int    `json:"id"`
}

type ComerLanguageResponse struct {
	ComerId  int    `json:"comer_id"`
	Id       int    `json:"id"`
	Language string `json:"language"`
	Code     string `json:"code"`
	Level    int    `json:"level"`
	IsNative bool   `json:"is_native"`
}

type ComerSkillResponse struct {
	ComerId     int    `json:"comer_id"`
	Id          int    `json:"id"`
	SkillName   string `json:"skill_name"`
	Level       int    `json:"level"`
	Years       int    `json:"years"`
	Description string `json:"description"`
}

type ComerSocialResponse struct {
	ComerId      int    `json:"comer_id"`
	Id           int    `json:"id"`
	PlatformName string `json:"platform_name"`
	UserName     string `json:"user_name"`
	PlatformId   string `json:"platform_id"`
	IsVerified   bool   `json:"is_verified"`
	Url          string `json:"url"`
}

type Contact struct {
	ContactType    uint8  `json:"contactType"` // 1:Email 2:Discord 3:Telegram
	ContactAddress string `json:"contactAddress"`
}

type Crowdfunding struct {
	ChainId              uint64 `json:"chain_id"`
	TxHash               string `json:"tx_hash"`
	CrowdfundingContract string `json:"crowdfunding_contract"` // 众筹合约地址
	StartupID            uint64 `json:"startup_id"`            // 初创公司ID
	ComerID              uint64 `json:"comer_id"`              // 创始人ID
	RaiseGoal            string `json:"raise_goal"`            // 募资目标
	RaiseBalance         string `json:"raise_balance"`         // 已募资金额
	SellInfo
	BuyInfo
	TeamWallet  string `json:"team_wallet"`  // 团队钱包地址
	SwapPercent string `json:"swap_percent"` // 兑换百分比
	StartTime   string `json:"start_time"`   // 开始时间
	EndTime     string `json:"end_time"`     // 结束时间
	Poster      string `json:"poster"`       // 海报URL
	Youtube     string `json:"youtube"`      // YouTube链接
	Detail      string `json:"detail"`       // 详情URL
	Description string `json:"description"`  // 项目描述
	Status      int    `json:"status"`       // 状态: 0-待定 1-即将开始 2-进行中 3-已结束 4-已取消 5-失败
}

type CrowdfundingRes struct {
	BaseInfo
	Crowdfunding
}

type FollowRelation struct {
	ComerID uint64 `json:comerID`
}

type GovernanceAdmin struct {
	BaseInfo
	SettingId uint64 `json:"setting_id"`
	Address   string `json:"address"`
}

type GovernanceProposal struct {
	StartupID           uint64 `json:"startup_id" validate:"min=1"`      // 关联的初创公司ID
	AuthorComerID       uint64 `json:"author_comer_id" valitate:"min=1"` // 作者用户ID
	AuthorWalletAddress string `json:"author_wallet_address"`            // 作者钱包地址
	ChainID             uint64 `json:"chain_id"`                         // 链ID
	BlockNumber         uint64 `json:"block_number"`                     // 区块高度
	ReleaseTimestamp    string `json:"release_timestamp"`                // 实际是 time.Time
	IPFSHash            string `json:"ipfs_hash"`                        // IPFS哈希
	Title               string `json:"title"`                            // 提案标题
	Description         string `json:"description"`                      // 提案描述
	DiscussionLink      string `json:"discussion_link"`                  // 讨论链接
	VoteSystem          string `json:"vote_system"`                      // 投票系统
	StartTime           string `json:"start_time"`                       // 开始时间
	EndTime             string `json:"end_time"`                         // 结束时间
	Status              int    `json:"status"`                           // 状态:0-待定 1-即将开始 2-活跃 3-已结束
}

type GovernanceProposalInfo struct {
	BaseInfo
	GovernanceProposal
	Comer   ComerResponse `json:"comer"`
	Startup StartupRes    `json:"startup"`
}

type GovernanceSetting struct {
	BaseInfo
	StartupId         uint64 `json:"startup_id"`         // 关联的初创公司ID
	ComerId           uint64 `json:"comer_id"`           // 创建者用户ID
	VoteSymbol        string `json:"vote_symbol"`        // 投票代币符号
	AllowMember       bool   `json:"allow_member"`       // 是否允许成员投票：0-否 1-是
	ProposalThreshold string `json:"proposal_threshold"` // 提案阈值
	ProposalValidity  string `json:"proposal_validity"`  // 提案有效期(天)
}

type GovernanceStrategy struct {
	BaseInfo
	SettingId            uint64  `json:"setting_id"`
	DictValue            string  `json:"dict_value"`
	StrategyName         string  `json:"strategy_name"`
	ChainId              uint64  `json:"chain_id"`
	TokenContractAddress string  `json:"token_contract_address"`
	VoteSymbol           string  `json:"vote_symbol"`
	VoteDecimals         int     `json:"vote_decimals"`
	TokenMinBalance      float64 `json:"token_min_balance"`
}

type GovernanceVote struct {
	BaseInfo
	ProposalId         uint64        `json:"proposal_id"`
	VoterComerId       uint64        `json:"voter_comer_id"`
	VoterWalletAddress string        `json:"voter_wallet_address"`
	ChoiceItemId       uint64        `json:"choice_item_id"`
	ChoiceItemName     string        `json:"choice_item_name"`
	Votes              string        `json:"votes"`
	IPFSHash           string        `json:"ipfs_hash"`
	Comer              ComerResponse `json:"comer"`
}

type Investor struct {
	BaseInfo
	ButTokenBalance  string `json:"buy_token_balance"`
	BuyTokenTotal    string `json:"buy_token_total"`
	ComerId          uint64 `json:"comer_id"`
	CrowdfundingId   uint64 `json:"crowdfunding_id"`
	SellTokenBalance string `json:"sell_token_balance"`
	SellTokenTotal   string `json:"sell_token_total"`
}

type OauthAccountBindingInfo struct {
	Linked      bool   `json:"linked"`
	AccountType int    `json:"accountType"`
	AccountId   uint64 `json:"accountId"`
}

type PostUpdate struct {
	SourceType int    `json:"sourceType"`
	SourceID   uint64 `json:"sourceId"`
	ComerID    uint64 `json:"comerId"`
	Content    string `json:"content"`
	TimeStamp  string `json:"timeStamp"` // post time
}

type ProposalChoiceReq struct {
	ItemName string `json:"item_name"` // 选项名称
	SeqNum   int    `json:"seq_num"`   // 排序序号
}

type ProposalChoiceRes struct {
	ProposalID uint64 `json:"proposal_id"` // 关联的提案ID
	ItemName   string `json:"item_name"`   // 选项名称
	SeqNum     int    `json:"seq_num"`     // 排序序号
}

type SellInfo struct {
	SellTokenContract string `json:"sell_token_contract"` // 出售代币合约地址
	SellTokenName     string `json:"sell_token_name"`     // 出售代币名称
	SellTokenSymbol   string `json:"sell_token_symbol"`   // 出售代币符号
	SellTokenDecimals int    `json:"sell_token_decimals"` // 出售代币精度
	SellTokenSupply   string `json:"sell_token_supply"`   // 出售代币总量
	SellTokenDeposit  string `json:"sell_token_deposit"`  // 出售代币质押量
	SellTokenBalance  string `json:"sell_token_balance"`  // 出售代币余额
	MaxSellPercent    string `json:"max_sell_percent"`
	SellTax           string `json:"sell_tax"`
}

type SettingRequest struct {
	VoteSymbol        string `json:"voteSymbol"`
	AllowMember       bool   `json:"allowMember"`
	ProposalThreshold string `json:"proposalThreshold"`
	ProposalValidity  string `json:"proposalValidity"`
}

type SimpleStartupInfo struct {
	Avatar  string `json:"avatar"`
	Id      int    `json:"id"`
	Name    string `json:"name"`
	OnChain bool   `json:"on_chain"`
}

type SocialBookResponse struct {
	Id           int                `json:"id"`
	SocialTool   SocialToolResponse `json:"socialTool"`
	SocialToolId int                `json:"socialToolId"`
	TargetId     int                `json:"targetId"`
	Type         int                `json:"type"`
	Value        string             `json:"value"`
}

type SocialToolResponse struct {
	Id   int    `json:"id"`
	Logo string `json:"logo"`
	Name string `json:"name"`
}

type Startup struct {
	ComerID              uint64 `json:"comerID" db:"comer_id"`
	Name                 string `json:"name" db:"name"`
	Mode                 uint8  `json:"mode" db:"mode"`
	Logo                 string `json:"logo" db:"logo"`
	Cover                string `json:"cover" db:"cover"`
	Mission              string `json:"mission" db:"mission"`
	TokenContractAddress string `json:"tokenContractAddress" db:"token_contract_address"`
	Overview             string `json:"overview" db:"overview"`
	ChainID              uint64 `json:"chainID" db:"chain_id"`
	TxHash               string `json:"blockChainAddress" db:"tx_hash"`
	OnChain              bool   `json:"onChain" db:"on_chain"`
	KYC                  string `json:"kyc" db:"kyc"`
	ContractAudit        string `json:"contractAudit" db:"contract_audit"`
}

type StartupBasic struct {
	Banner        string `json:"banner"`
	ChainId       int    `json:"chainId"`
	ComerId       int    `json:"comerId"`
	ContractAudit string `json:"contractAudit"`
	Id            uint64 `json:"id"`
	IsConnected   bool   `json:"isConnected"`
	Kyc           string `json:"kyc"`
	Logo          string `json:"logo"`
	Mission       string `json:"mission"`
	Name          string `json:"name"`
	OnChain       bool   `json:"onChain"`
	TxHash        string `json:"txHash"`
	Type          int    `json:"type"`
}

type StartupCardResponse struct {
	Banner        string                `json:"banner"`
	ChainId       int                   `json:"chainId"`
	ComerId       int                   `json:"comerId"`
	ContractAudit string                `json:"contractAudit"`
	Id            int                   `json:"id"`
	IsConnected   bool                  `json:"isConnected"`
	Kyc           string                `json:"kyc"`
	Logo          string                `json:"logo"`
	Mission       string                `json:"mission"`
	Name          string                `json:"name"`
	OnChain       bool                  `json:"onChain"`
	Socials       []SocialBookResponse  `json:"socials"`
	Tags          []TagRelationResponse `json:"tags"`
	TxHash        string                `json:"txHash"`
	Type          int                   `json:"type"`
}

type StartupRes struct {
	Startup
	GovernanceSetting GovernanceSetting `json:"governance_setting"`
}

type StartupTeamMember struct {
	ComerID      uint64 `json:"comerID"`
	StartupID    uint64 `json:"startupID"`
	Position     string `json:"position"`
	Comer        string `json:"comer"`
	FollowedByMe bool   `json:"followedByMe"`
}

type StrategyRequest struct {
	DictValue            string `json:"dictValue" binding:"required"`
	StrategyName         string `json:"strategyName" binding:"required"`
	ChainId              uint64 `json:"chainId" binding:"required"`
	VoteSymbol           string `json:"voteSymbol"`
	TokenContractAddress string `json:"tokenContractAddress" binding:"required"`
	VoteDecimals         int    `json:"voteDecimals"`
	TokenMinBalance      string `json:"tokenMinBalance"`
}

type Swap struct {
	BaseInfo
	ChainId         uint64 `json:"chain_id"`
	TxHash          string `json:"tx_hash"`
	Timestamp       string `json:"timestamp"`         // 交易时间戳
	Status          int    `json:"status"`            // 状态:0-待处理 1-成功 2-失败
	CrowdfundingID  uint64 `json:"crowdfunding_id"`   // 众筹项目ID
	ComerID         uint64 `json:"comer_id"`          // 用户ID
	Access          int    `json:"access"`            // 操作类型:1-投资 2-赎回
	BuyTokenSymbol  string `json:"buy_token_symbol"`  // 买入代币符号
	BuyTokenAmount  string `json:"buy_token_amount"`  // 买入代币数量
	SellTokenSymbol string `json:"sell_token_symbol"` // 卖出代币符号
	SellTokenAmount string `json:"sell_token_amount"` // 卖出代币数量
	Price           string `json:"price"`             // 兑换价格
}

type Tag struct {
	Name     string `json:"name"`
	Category string `json:"category"`
	IsIndex  bool   `json:"isIndex"`
}

type TagListResponse struct {
	List []TagResponse `json:"list"`
}

type TagRelationResponse struct {
	Id       int         `json:"id"`
	Tag      TagResponse `json:"tag"`
	TagId    int         `json:"tag_id"`
	TargetId int         `json:"target_id"`
	Type     int         `json:"type"`
}

type TagResponse struct {
	Id       int    `json:"id"`
	Name     string `json:"name"`
	Category string `json:"category"`
}

type Wallet struct {
	Address string `json:address`
}
